     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_api_putchar
     7 00000000                                 	EXTERN	_api_end
     8 00000000                                 	EXTERN	_vsprintf
     9 00000000                                 	EXTERN	_api_putstr0
    10 00000000                                 	EXTERN	_api_initmalloc
    11 00000000                                 	EXTERN	_api_malloc
    12 00000000                                 	EXTERN	_api_openwin
    13 00000000                                 	EXTERN	_api_alloctimer
    14 00000000                                 	EXTERN	_api_inittimer
    15 00000000                                 	EXTERN	_sprintf
    16 00000000                                 	EXTERN	_api_boxfilwin
    17 00000000                                 	EXTERN	_api_putstrwin
    18 00000000                                 	EXTERN	_api_settimer
    19 00000000                                 	EXTERN	_api_getkey
    20 00000000                                 [FILE "timer.c"]
    21                                          [SECTION .text]
    22 00000000                                 	GLOBAL	_putchar
    23 00000000                                 _putchar:
    24 00000000 55                              	PUSH	EBP
    25 00000001 89 E5                           	MOV	EBP,ESP
    26 00000003 53                              	PUSH	EBX
    27 00000004 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
    28 00000007 53                              	PUSH	EBX
    29 00000008 E8 [00000000]                   	CALL	_api_putchar
    30 0000000D 89 D8                           	MOV	EAX,EBX
    31 0000000F 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    32 00000012 C9                              	LEAVE
    33 00000013 C3                              	RET
    34 00000014                                 	GLOBAL	_exit
    35 00000014                                 _exit:
    36 00000014 55                              	PUSH	EBP
    37 00000015 89 E5                           	MOV	EBP,ESP
    38 00000017 5D                              	POP	EBP
    39 00000018 E9 [00000000]                   	JMP	_api_end
    40 0000001D                                 	GLOBAL	_printf
    41 0000001D                                 _printf:
    42 0000001D 55                              	PUSH	EBP
    43 0000001E 89 E5                           	MOV	EBP,ESP
    44 00000020 56                              	PUSH	ESI
    45 00000021 53                              	PUSH	EBX
    46 00000022 81 EC 000003F0                  	SUB	ESP,1008
    47 00000028 8D 45 0C                        	LEA	EAX,DWORD [12+EBP]
    48 0000002B 8D 9D FFFFFC08                  	LEA	EBX,DWORD [-1016+EBP]
    49 00000031 50                              	PUSH	EAX
    50 00000032 FF 75 08                        	PUSH	DWORD [8+EBP]
    51 00000035 53                              	PUSH	EBX
    52 00000036 E8 [00000000]                   	CALL	_vsprintf
    53 0000003B 53                              	PUSH	EBX
    54 0000003C 89 C6                           	MOV	ESI,EAX
    55 0000003E E8 [00000000]                   	CALL	_api_putstr0
    56 00000043 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
    57 00000046 89 F0                           	MOV	EAX,ESI
    58 00000048 5B                              	POP	EBX
    59 00000049 5E                              	POP	ESI
    60 0000004A 5D                              	POP	EBP
    61 0000004B C3                              	RET
    62 0000004C                                 	GLOBAL	_puts
    63 0000004C                                 _puts:
    64 0000004C 55                              	PUSH	EBP
    65 0000004D 89 E5                           	MOV	EBP,ESP
    66 0000004F 56                              	PUSH	ESI
    67 00000050 53                              	PUSH	EBX
    68 00000051 81 EC 000003F0                  	SUB	ESP,1008
    69 00000057 8D 45 0C                        	LEA	EAX,DWORD [12+EBP]
    70 0000005A 8D 9D FFFFFC08                  	LEA	EBX,DWORD [-1016+EBP]
    71 00000060 50                              	PUSH	EAX
    72 00000061 FF 75 08                        	PUSH	DWORD [8+EBP]
    73 00000064 53                              	PUSH	EBX
    74 00000065 E8 [00000000]                   	CALL	_vsprintf
    75 0000006A 53                              	PUSH	EBX
    76 0000006B 89 C6                           	MOV	ESI,EAX
    77 0000006D E8 [00000000]                   	CALL	_api_putstr0
    78 00000072 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
    79 00000075 89 F0                           	MOV	EAX,ESI
    80 00000077 5B                              	POP	EBX
    81 00000078 5E                              	POP	ESI
    82 00000079 5D                              	POP	EBP
    83 0000007A C3                              	RET
    84                                          [SECTION .data]
    85 00000000                                 LC0:
    86 00000000 54 69 6D 65 72 00               	DB	"Timer",0x00
    87 00000006                                 LC1:
    88 00000006 25 35 64 3A 25 30 32 64 3A 25   	DB	"%5d:%02d:%02d",0x00
       00000010 30 32 64 00 
    89                                          [SECTION .text]
    90 0000007B                                 	GLOBAL	_HighMain
    91 0000007B                                 _HighMain:
    92 0000007B 55                              	PUSH	EBP
    93 0000007C 89 E5                           	MOV	EBP,ESP
    94 0000007E 57                              	PUSH	EDI
    95 0000007F 56                              	PUSH	ESI
    96 00000080 31 FF                           	XOR	EDI,EDI
    97 00000082 53                              	PUSH	EBX
    98 00000083 31 F6                           	XOR	ESI,ESI
    99 00000085 83 EC 1C                        	SUB	ESP,28
   100 00000088 C7 45 D8 00000000               	MOV	DWORD [-40+EBP],0
   101 0000008F E8 [00000000]                   	CALL	_api_initmalloc
   102 00000094 68 00001D4C                     	PUSH	7500
   103 00000099 E8 [00000000]                   	CALL	_api_malloc
   104 0000009E 68 [00000000]                   	PUSH	LC0
   105 000000A3 6A 32                           	PUSH	50
   106 000000A5 68 00000096                     	PUSH	150
   107 000000AA 50                              	PUSH	EAX
   108 000000AB E8 [00000000]                   	CALL	_api_openwin
   109 000000B0 89 45 E0                        	MOV	DWORD [-32+EBP],EAX
   110 000000B3 E8 [00000000]                   	CALL	_api_alloctimer
   111 000000B8 68 00000080                     	PUSH	128
   112 000000BD 50                              	PUSH	EAX
   113 000000BE 89 45 DC                        	MOV	DWORD [-36+EBP],EAX
   114 000000C1 E8 [00000000]                   	CALL	_api_inittimer
   115 000000C6 83 C4 1C                        	ADD	ESP,28
   116 000000C9                                 L6:
   117 000000C9 57                              	PUSH	EDI
   118 000000CA 8D 5D E4                        	LEA	EBX,DWORD [-28+EBP]
   119 000000CD 56                              	PUSH	ESI
   120 000000CE FF 75 D8                        	PUSH	DWORD [-40+EBP]
   121 000000D1 68 [00000006]                   	PUSH	LC1
   122 000000D6 53                              	PUSH	EBX
   123 000000D7 E8 [00000000]                   	CALL	_sprintf
   124 000000DC 6A 07                           	PUSH	7
   125 000000DE 6A 29                           	PUSH	41
   126 000000E0 6A 73                           	PUSH	115
   127 000000E2 6A 1B                           	PUSH	27
   128 000000E4 6A 1C                           	PUSH	28
   129 000000E6 FF 75 E0                        	PUSH	DWORD [-32+EBP]
   130 000000E9 E8 [00000000]                   	CALL	_api_boxfilwin
   131 000000EE 83 C4 2C                        	ADD	ESP,44
   132 000000F1 53                              	PUSH	EBX
   133 000000F2 6A 0B                           	PUSH	11
   134 000000F4 6A 00                           	PUSH	0
   135 000000F6 6A 1B                           	PUSH	27
   136 000000F8 6A 1C                           	PUSH	28
   137 000000FA FF 75 E0                        	PUSH	DWORD [-32+EBP]
   138 000000FD E8 [00000000]                   	CALL	_api_putstrwin
   139 00000102 6A 64                           	PUSH	100
   140 00000104 FF 75 DC                        	PUSH	DWORD [-36+EBP]
   141 00000107 E8 [00000000]                   	CALL	_api_settimer
   142 0000010C 83 C4 20                        	ADD	ESP,32
   143 0000010F 6A 01                           	PUSH	1
   144 00000111 E8 [00000000]                   	CALL	_api_getkey
   145 00000116 5A                              	POP	EDX
   146 00000117 83 C0 80                        	ADD	EAX,-128
   147 0000011A 75 15                           	JNE	L7
   148 0000011C 47                              	INC	EDI
   149 0000011D 83 FF 3C                        	CMP	EDI,60
   150 00000120 75 A7                           	JNE	L6
   151 00000122 46                              	INC	ESI
   152 00000123 31 FF                           	XOR	EDI,EDI
   153 00000125 83 FE 3C                        	CMP	ESI,60
   154 00000128 75 9F                           	JNE	L6
   155 0000012A 31 F6                           	XOR	ESI,ESI
   156 0000012C FF 45 D8                        	INC	DWORD [-40+EBP]
   157 0000012F EB 98                           	JMP	L6
   158 00000131                                 L7:
   159 00000131 E8 [00000000]                   	CALL	_api_end
   160 00000136 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   161 00000139 5B                              	POP	EBX
   162 0000013A 5E                              	POP	ESI
   163 0000013B 5F                              	POP	EDI
   164 0000013C 5D                              	POP	EBP
   165 0000013D C3                              	RET
